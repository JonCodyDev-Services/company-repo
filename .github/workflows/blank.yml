permissions:
  issues: write     # Write access to issues
  actions: write    # Write access to actions (allows action execution)
  contents: read    # Read access to repository contents (needed for checkout)
  projects: write   # Write access to projects (allows managing project boards)

name: CI

on:
  issues:
    types: [opened]  # Trigger workflow when an issue is created (opened)

jobs:
  add_issue_to_project:
    runs-on: ubuntu-latest

    steps:
      - name: Debug event details
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Event Action: ${{ github.event.action }}"
          echo "Full Event Payload: ${{ toJson(github.event) }}"

      - name: Add issue to project board
        if: ${{ github.event_name == 'issues' && github.event.action == 'opened' }}
        uses: actions/github-script@v5
        with:
          script: |
            const issue_number = context.payload.issue.number;
            const project_id = '2';  // Replace this with your GitHub Project ID
            const column_name = 'Backlog';  // Default column to add the issue to (e.g., "Backlog")
            
            try {
              // Fetch columns in the project
              const columns = await github.rest.projects.listColumns({
                project_id: project_id,
              });
              
              // Find the desired column by name
              const targetColumn = columns.data.find(column => column.name === column_name);
              if (targetColumn) {
                // Add the issue to the specified column
                await github.rest.projects.createCard({
                  column_id: targetColumn.id,
                  content_id: issue_number,
                  content_type: 'Issue',
                });
                console.log(`Issue #${issue_number} added to "${column_name}"`);
              } else {
                console.log(`Column "${column_name}" not found in project ${project_id}`);
              }
            } catch (error) {
              console.error('Error adding issue to project:', error);
              throw error;
            }
        env:
          GITHUB_TOKEN: ${{ secrets.COMPANY_REPO_ACTIONS_TOKEN }}